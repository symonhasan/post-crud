{"version":3,"sources":["assets/down-chevron.svg","assets/tick.svg","components/Navigation/Navigation.js","components/Modal/CatagorySelector.js","components/Modal/CreatePost.js","components/Modal/CreateCatagory.js","components/Post/Post.js","pages/Home/Home.js","App.js","store/reducer.js","index.js"],"names":["module","exports","Navigation","props","location","useLocation","className","to","pathname","exact","connect","state","catagory","selectedCatagory","dispatch","selectCatagory","catagoryName","type","payload","useState","postCatClicked","setPostCatClicked","title","setTitle","useEffect","newTitle","forEach","element","onClick","length","src","dropdown","height","alt","hash","map","index","id","e","target","key","filter","el","tick","posts","clearSelectedCatagory","createNewPost","feed","setSelectedCatagory","editPost","history","useHistory","params","useParams","setFeed","push","placeholder","rows","cols","value","onChange","event","replace","saveNewCatagory","setCatagoryName","Post","catagories","deletePost","match","App","path","component","Home","initialState","reducer","action","currentCatagory","flag","newSelectedCatagory","unshift","newArr","Set","oldPosts","splice","arr","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eae3684c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/down-chevron.2febd8c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.8b4d6e74.svg\";","import React from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = (props) => {\r\n    const location = useLocation();\r\n    return (\r\n        <div className=\"navigation\">\r\n            <NavLink to={`${location.pathname}`} className=\"site-header\">\r\n                Post<span>CRUD</span>\r\n            </NavLink>\r\n            <ul className=\"nav-links\">\r\n                <NavLink to=\"#create-post\" exact>\r\n                    Create Post\r\n                </NavLink>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React, { useState, useEffect } from \"react\";\r\nimport \"./CreatePost.css\";\r\nimport { useLocation } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport dropdown from \"../../assets/down-chevron.svg\";\r\nimport tick from \"../../assets/tick.svg\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CatagorySelector = (props) => {\r\n    const location = useLocation();\r\n    const [postCatClicked, setPostCatClicked] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let newTitle = \"\";\r\n        props.selectedCatagory.forEach((element) => {\r\n            if (newTitle !== \"\") newTitle += \" , \";\r\n            newTitle += element;\r\n        });\r\n        setTitle(newTitle);\r\n    }, [props.selectedCatagory]);\r\n\r\n    const renderPostCatagory = () => {\r\n        return (\r\n            <div className=\"post-catagory-option\">\r\n                <NavLink\r\n                    to={`${location.pathname}${location.hash}#create-catagory`}\r\n                >\r\n                    Create New Catagory\r\n                </NavLink>\r\n                {props.catagory.map((element, index) => {\r\n                    return (\r\n                        <li\r\n                            id={element}\r\n                            onClick={(e) => props.selectCatagory( e.target.id )}\r\n                            key={index}\r\n                        >\r\n                            {element}\r\n                            {props.selectedCatagory.filter(\r\n                                (el) => el === element\r\n                            ).length ? (\r\n                                <span>\r\n                                    <img src={tick} height=\"15px\" alt=\"tick\" />\r\n                                </span>\r\n                            ) : null}\r\n                        </li>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        <div>\r\n            <div\r\n                className=\"post-catagory\"\r\n                onClick={() => {\r\n                    setPostCatClicked(!postCatClicked);\r\n                }}\r\n            >\r\n                <div className=\"post-catagory-select\">\r\n                    <span>{title.length ? title : \"Post Catagory\"}</span>\r\n                </div>\r\n                <img src={dropdown} height=\"15px\" alt=\"down-chevron\" />\r\n            </div>\r\n            {postCatClicked ? renderPostCatagory() : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        catagory: state.catagory,\r\n        selectedCatagory: state.selectedCatagory,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return{\r\n        selectCatagory: ( catagoryName ) => {\r\n            dispatch({\r\n                type: \"SELECT_CATAGORY\",\r\n                payload: {\r\n                    catagoryName: catagoryName,\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CatagorySelector);\r\n","import React, { useState , useEffect } from \"react\";\r\nimport \"./CreatePost.css\";\r\nimport { useLocation, useHistory, useParams } from \"react-router\";\r\nimport CatagorySelector from \"./CatagorySelector\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CreatePost = (props) => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    const [ feed , setFeed ] = useState(\"\");\r\n\r\n    const postTextAreaOnChange = ( event ) => {\r\n        setFeed( event.target.value );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if( location.hash === '#edit-post' ){\r\n            const id = params.id;\r\n            setFeed( props.posts[ id ].feed );\r\n            props.setSelectedCatagory( id );\r\n        }\r\n    } , [])\r\n\r\n    const postButtonOnClick = () => {\r\n        if( location.hash === '#edit-post' ){\r\n            props.editPost( params.id , feed );\r\n            history.replace(`${location.pathname}`);\r\n        } else{\r\n            props.createNewPost( feed );\r\n            history.replace(`${location.pathname}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-body\">\r\n                <div className=\"modal-header\">\r\n                    <span className=\"modal-title\">{props.title}</span>\r\n                    <span\r\n                        className=\"modal-close\"\r\n                        onClick={() => {\r\n                            props.clearSelectedCatagory();\r\n                            history.push(location.pathname);\r\n                        }}\r\n                    >\r\n                        &times;\r\n                    </span>\r\n                </div>\r\n                <div className=\"modal-content\">\r\n                    <textarea\r\n                        className=\"post-textarea\"\r\n                        placeholder=\"What's on your mind?\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        value={feed}\r\n                        onChange={postTextAreaOnChange}\r\n                    />\r\n                    <CatagorySelector/>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={postButtonOnClick}>Post</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    return{\r\n        posts: state.posts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return{\r\n        clearSelectedCatagory: () => {\r\n            dispatch({\r\n                type: \"CLEAR_SELECTED_CATAGORY\"\r\n            })\r\n        },\r\n        createNewPost: ( feed ) => {\r\n            dispatch({\r\n                type: \"CREATE_POST\",\r\n                payload: {\r\n                    feed: feed\r\n                }\r\n            })\r\n        },\r\n        setSelectedCatagory: ( id ) => {\r\n            dispatch({\r\n                type: \"SET_SELECTED_CATAGORY\",\r\n                payload: {\r\n                    id: id,\r\n                }\r\n            })\r\n        },\r\n        editPost: ( id , feed ) => {\r\n            dispatch({\r\n                type: \"EDIT_POST\",\r\n                payload: {\r\n                    id: id,\r\n                    feed: feed\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)(CreatePost);\r\n","import React, { useState } from \"react\";\r\nimport \"./CreatePost.css\";\r\nimport { useLocation, useHistory } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CreateCatagory = (props) => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const [ catagoryName , setCatagoryName ] = useState(\"\");\r\n\r\n    const catagorySaveOnClick = () => {\r\n        props.saveNewCatagory( catagoryName );\r\n        if( location.hash === \"#edit-post#create-catagory\" )\r\n            history.replace(`${location.pathname}#edit-post`);\r\n        else{\r\n            history.replace(`${location.pathname}#create-post`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-body\">\r\n                <div className=\"modal-header\">\r\n                    <span className=\"modal-title\">Create Catagory</span>\r\n                    <span\r\n                        className=\"modal-close\"\r\n                        onClick={() => {\r\n                            history.push(`${location.pathname}#create-post`);\r\n                        }}\r\n                    >\r\n                        &times;\r\n                    </span>\r\n                </div>\r\n                <div className=\"modal-content\">\r\n                    <input\r\n                        className=\"post-textarea\"\r\n                        placeholder=\"Catagory Name\"\r\n                        type=\"text\"\r\n                        value={catagoryName}\r\n                        onChange={(e) => setCatagoryName( e.target.value )}\r\n                    />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={catagorySaveOnClick}>Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return{\r\n        saveNewCatagory: ( catagoryName ) => {\r\n            dispatch({\r\n                type: \"SAVE_NEW_CATAGORY\",\r\n                payload: {\r\n                    catagoryName: catagoryName\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect( null , mapDispatchToProps )( CreateCatagory );\r\n","import React from 'react';\r\nimport './Post.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className=\"post-div\">\r\n            <div className=\"post-upper\">\r\n                <span className=\"post-user-name\">User Name</span>\r\n                <div className=\"post-menu\">\r\n                    <span>...</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <NavLink to={`/post/${props.id}#edit-post`}>Edit</NavLink>\r\n                        <NavLink to={`/post/${props.id}#delete-post`}>Delete</NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"post-main\">\r\n                <span>{props.feed}</span>\r\n            </div>\r\n            <div className=\"post-catagories\">\r\n                {\r\n                    props.catagories.map( ( element , index ) => {\r\n                        return <li key={index}>{element}</li>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, { useEffect } from 'react';\r\nimport './Home.css';\r\nimport Navigation from '../../components/Navigation/Navigation';\r\nimport CreatePost from '../../components/Modal/CreatePost';\r\nimport CreateCatagory from '../../components/Modal/CreateCatagory';\r\nimport Post from '../../components/Post/Post';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Home = ( props ) => {\r\n    const hash = props.location.hash;\r\n    const { id } = props.match.params;\r\n    const history = useHistory();\r\n    const postDelete = () => {\r\n        props.deletePost( id );\r\n        history.replace(`/post`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if( id && hash === \"#delete-post\")\r\n        {\r\n            postDelete();\r\n        }\r\n    }, [ id , hash])\r\n\r\n    return(\r\n        <div className=\"\">\r\n            <Navigation />\r\n            <div className=\"posts-area\">\r\n                {\r\n                    props.posts.map( ( element , index ) => {\r\n                        return <Post key={index} id={index} feed={element.feed} catagories={element.catagory}/>\r\n                    })\r\n                }\r\n            </div>\r\n            { ( id && hash === '#edit-post' ) || ( id && hash === '#edit-post#create-catagory' ) ? <CreatePost title=\"Edit Post\" />: null }\r\n            { hash === '#create-post' || hash === '#create-post#create-catagory' ? <CreatePost title=\"Create Post\"/> : null}\r\n            { hash === '#create-post#create-catagory' || hash === '#edit-post#create-catagory' ? <CreateCatagory /> : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    return{\r\n        posts: state.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return{\r\n        deletePost: ( id ) => {\r\n            dispatch({\r\n                type: \"DELETE_POST\",\r\n                payload: {\r\n                    id: id,\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( Home );","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './pages/Home/Home';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/post/:id\" component={Home} />\n        <Route path=\"/\" component={Home}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    posts: [\r\n        {\r\n            feed: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga mollitia odio voluptas? Similique fugit nemo nulla, perspiciatis possimus quis optio dolorum ab, culpa nihil facere, rerum officia distinctio sit quisquam?\",\r\n            catagory: ['Cat A' , 'Cat B']\r\n        },\r\n        {\r\n            feed: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Architecto animi consequatur, debitis tenetur maxime corrupti voluptas doloremque aut maiores libero cum nam enim voluptatem blanditiis. Consequuntur modi atque illo molestias?\",\r\n            catagory: []\r\n        }\r\n    ],\r\n    catagory: ['Cat A' , 'Cat B'],\r\n    selectedCatagory: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SAVE_NEW_CATAGORY\":\r\n            const currentCatagory = state.catagory;\r\n            return {\r\n                ...state,\r\n                catagory: [...currentCatagory, action.payload.catagoryName],\r\n                selectedCatagory: [ ...state.selectedCatagory , action.payload.catagoryName ]\r\n            };\r\n        case \"SELECT_CATAGORY\":\r\n            const flag = state.selectedCatagory.filter(\r\n                (element) => element === action.payload.catagoryName\r\n            ).length;\r\n            if (!flag) {\r\n                return {\r\n                    ...state,\r\n                    selectedCatagory: [\r\n                        ...state.selectedCatagory,\r\n                        action.payload.catagoryName,\r\n                    ],\r\n                };\r\n            } else {\r\n                const newSelectedCatagory = state.selectedCatagory.filter(\r\n                    (element) => element !== action.payload.catagoryName\r\n                );\r\n                return {\r\n                    ...state,\r\n                    selectedCatagory: [...newSelectedCatagory],\r\n                };\r\n            }\r\n        case \"CLEAR_SELECTED_CATAGORY\":\r\n            return{\r\n                ...state,\r\n                selectedCatagory: []\r\n            }\r\n        case \"CREATE_POST\":\r\n            const posts = state.posts;\r\n            posts.unshift({\r\n                feed: action.payload.feed,\r\n                catagory: [...state.selectedCatagory]\r\n            })\r\n            return{\r\n                ...state,\r\n                posts: [...posts],\r\n                selectedCatagory: []\r\n            }\r\n        case \"SET_SELECTED_CATAGORY\":\r\n            const { id } = action.payload;\r\n            let newArr = [...state.selectedCatagory , ...state.posts[ id ].catagory ];\r\n            newArr = new Set( newArr );\r\n            return{\r\n                ...state,\r\n                selectedCatagory: [ ...newArr ]\r\n            }\r\n        case \"EDIT_POST\":\r\n            const oldPosts = state.posts;\r\n            oldPosts.splice( action.payload.id , 1 );\r\n            oldPosts.splice( action.payload.id , 0 , {\r\n                feed: action.payload.feed,\r\n                catagory: state.selectedCatagory\r\n            })\r\n            return{\r\n                ...state,\r\n                posts: [...oldPosts],\r\n                selectedCatagory: []\r\n            }\r\n        case \"DELETE_POST\":\r\n            const arr = state.posts;\r\n            arr.splice( action.payload.id , 1 );\r\n            return{\r\n                ...state,\r\n                posts: [...arr]\r\n            }\r\n        default:\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reducer from './store/reducer';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst store = createStore( reducer );\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}